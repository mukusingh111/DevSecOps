# SCPPE Demo - pull request 
name: SCPPE CI Demo - Pull Request
on: push

jobs:
  build:
    runs-on: ubuntu-latest
    env:  # variables to set for project and org
      codescan_org: 'scppeplayground'
      codescan_project_key: 'ivanwwyeung-scppe_devsecops_play_cigit'
      codescan_token: ${{ secrets.CODESCAN_AUTH_TOKEN }}
    steps:
    - uses: actions/checkout@master
      if: github.event.action == 'opened' || github.event.action == 'synchronize'
    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'

    - name: Install Salesforce CLI
      run: |
        npm install sfdx-cli
        node_modules/sfdx-cli/bin/run --version
        node_modules/sfdx-cli/bin/run plugins --core
        # install code scan plug-in
        echo y|node_modules/sfdx-cli/bin/run plugins:install sfdx-codescan-plugin
      
    - name: Authenticate DevHub
      run: |
        echo "${SALESFORCE_JWT_SECRET_KEY}" > server.key
        node_modules/sfdx-cli/bin/run force:auth:jwt:grant --clientid ${{ secrets.SALESFORCE_CONSUMER_KEY }} --jwtkeyfile server.key --username ${{ secrets.SALESFORCE_DEVHUB_USERNAME}} --setdefaultdevhubusername -a devhub
      env:
        SALESFORCE_JWT_SECRET_KEY: ${{ secrets.SALESFORCE_JWT_SECRET_KEY }}
      
    - name: Define CI org
      run: node_modules/sfdx-cli/bin/run force:org:create -v devhub -s -f config/project-scratch-def.json -a ciorg -d 1

    - name: Deploy source
      run: node_modules/sfdx-cli/bin/run force:source:push -u ciorg

    - name: Run Apex test
      run: node_modules/sfdx-cli/bin/run force:apex:test:run -c -r human

    # Note: this GitHub Action does not make a second call to invoke the quality gate check. As such it does not fail regardless of the result 
    # - name: Run Static Code Analysis using pre-defined GitHub Action 
    #  uses: codescan-io/codescan-scanner-action@master
    #  with:
    #      login: ${{ secrets.CODESCAN_AUTH_TOKEN }}
    #      organization: 'scppeplayground'
    #      projectKey: 'ivanwwyeung-scppe_devsecops_play_cigit'
    #      args: |
    #          sonar.verbose=true
    #          sonar.java.binaries=target

    # - name: Run Codescan On Push
    #  if: github.event_name == 'push'
    #  env:  
    #    branch_name: ${{github.ref}}
    #    branch_type: 'LONG'
    #  run: |
    #    sfdx codescan:run --token=$codescan_token --projectkey=$codescan_project_key --organization=$codescan_org -Dsonar.branch.name=${branch_name##*/} -Dsonar.branch.type=$branch_type

    # - name: Run Codescan On PR
    #  if: github.event_name == 'pull_request'
    #  env:  
    #    branch_name: ${{github.head_ref}}
    #    target: ${{github.base_ref}}
    #    branch_type: SHORT 
    #  run: |
    #   node_modules/sfdx-cli/bin/run codescan:run --token=$codescan_token --projectkey=$codescan_project_key --organization=$codescan_org -Dsonar.branch.name=$branch_name -Dsonar.branch.target=$target -Dsonar.branch.type=$branch_type
    
    - name: Comment login url
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PULL_REQUEST_COMMENT_URL:  ${{ github.event.pull_request._links.comments.href }}
      run: |
        CIORG_LOGIN_URL=$(node_modules/sfdx-cli/bin/run force:org:open -u ciorg -r) 
        curl -X POST -H 'Content-Type:application/json' -d "{\"body\":\"${CIORG_LOGIN_URL}\"}" ${PULL_REQUEST_COMMENT_URL}?access_token=${GITHUB_TOKEN}
